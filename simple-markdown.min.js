!function () { var e = /\r\n?/g, n = /\t/g, t = /\f/g, r = function (r) { return r.replace(e, "\n").replace(t, "").replace(n, "    ") }, l = function (e) { var n = Object.keys(e); n.forEach(function (n) { var t = e[n].order; "number" == typeof t && isFinite(t) || "undefined" == typeof console || console.warn("simple-markdown: Invalid order for rule `" + n + "`: " + t) }), n.sort(function (n, t) { var r = e[n], l = e[t], o = r.order, u = l.order; if (o !== u) return o - u; var a = r.quality ? 0 : 1, c = l.quality ? 0 : 1; return a !== c ? a - c : n < t ? -1 : n > t ? 1 : 0 }); var t = function (r, l) { var o = []; l = l || {}; for (var u = ""; r;) { var a = null, c = null, i = null, p = NaN, f = 0, s = n[0], y = e[s]; do { var d = y.order, h = y.match(r, l, u); if (h) { var m = y.quality ? y.quality(h, l, u) : 0; m <= p || (a = s, c = y, i = h, p = m) } s = n[++f], y = e[s] } while (y && (!i || y.order === d && y.quality)); if (!i) throw new Error("could not find rule to match content: " + r); var g = c.parse(i, t, l); Array.isArray(g) ? Array.prototype.push.apply(o, g) : (null == g.type && (g.type = a), o.push(g)), u = i[0], r = r.substring(u.length) } return o }; return function (e, n) { return t(r(e), n) } }, o = function (e) { var n = function (n, t) { return t.inline ? e.exec(n) : null }; return n.regex = e, n }, u = function (e) { var n = function (n, t) { return t.inline ? null : e.exec(n) }; return n.regex = e, n }, a = function (e) { var n = function (n, t) { return e.exec(n) }; return n.regex = e, n }, c = function (e) { var n = function (t, r) { if (r = r || {}, Array.isArray(t)) { for (var l = r.key, o = [], u = !1, a = 0; a < t.length; a++) { r.key = a; var c = n(t[a], r), i = "string" == typeof c; i && u ? o[o.length - 1] += c : o.push(c), u = i } return r.key = l, o } return e(t, n, r) }; return n }, i = function (e) { var n = function (t, r) { return r = r || {}, Array.isArray(t) ? t.map(function (e) { return n(e, r) }).join("") : e(t, n, r) }; return n }, p = "function" == typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103, f = function (e) { return e._store = { validated: !0, originalProps: e.props }, e }, s = function (e, n, t, r) { t = t || {}, r = void 0 === r || r; var l = ""; for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && t[o] && (l += " " + o + '="' + t[o] + '"'); var u = "<" + e + l + ">"; return r ? u + n + "</" + e + ">" : u }, y = {}, d = function (e) { if (null == e) return null; try { if (0 === decodeURIComponent(e).replace(/[^A-Za-z0-9/:]/g, "").toLowerCase().indexOf("javascript:")) return null } catch (e) { return null } return e }, h = /\\([^0-9A-Za-z\s])/g, m = function (e) { return e.replace(h, "$1") }, g = function (e, n, t) { var r = t.inline || !1; t.inline = !0; var l = e(n, t); return t.inline = r, l }, v = function (e, n, t) { var r = t.inline || !1; t.inline = !1; var l = e(n + "\n\n", t); return t.inline = r, l }, $ = function (e, n, t) { return { content: g(n, e[1], t) } }, k = function () { return {} }, _ = "(?:[*+-]|\\d+\\.)", b = "( *)(" + _ + ") +", x = new RegExp("^" + b), w = new RegExp(b + "[^\\n]*(?:\\n(?!\\1" + _ + " )[^\\n]*)*(\n|$)", "gm"), E = /\n{2,}$/, S = E, R = / *\n+$/, A = new RegExp("^( *)(" + _ + ") [\\s\\S]+?(?:\n{2,}(?! )(?!\\1" + _ + " )\\n*|\\s*\n*$)"), O = /^$|\n *$/, q = function () { var e = /^ *| *\| *$/g, n = /^ *|\| *$/g, t = /(?: *\| *)?\n$/, r = /\n$/, l = /^ *\| *| *\| *$/g, o = / *\| */, u = /^ *-+: *$/, a = /^ *:-+: *$/, c = /^ *:-+ *$/, i = function (e) { return u.test(e) ? "right" : a.test(e) ? "center" : c.test(e) ? "left" : null }, p = function (n, t, r) { return n[1].replace(e, "").split(o).map(function (e) { return t(e, r) }) }, f = function (e, t, r) { return e[2].replace(n, "").split(o).map(i) }, s = function (e, n, r) { return e[3].replace(t, "").split("\n").map(function (e) { return e.replace(l, "").split(o).map(function (e) { return n(e, r) }) }) }, y = function (e, n, t) { return e[3].replace(r, "").split("\n").map(function (e) { return e.split(o).map(function (e) { return n(e, t) }) }) }; return { parseTable: function (e, n, t) { t.inline = !0; var r = p(e, n, t), l = f(e, n, t), o = s(e, n, t); return t.inline = !1, { type: "table", header: r, align: l, cells: o } }, parseNpTable: function (e, n, t) { t.inline = !0; var r = p(e, n, t), l = f(e, n, t), o = y(e, n, t); return t.inline = !1, { type: "table", header: r, align: l, cells: o } }, NPTABLE_REGEX: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/ } }(), P = "(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*", j = "\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*", N = /mailto:/i, B = function (e, n, t) { var r = (e[2] || e[1]).replace(/\s+/g, " ").toLowerCase(); if (n._defs && n._defs[r]) { var l = n._defs[r]; t.target = l.target, t.title = l.title } return n._refs = n._refs || {}, n._refs[r] = n._refs[r] || [], n._refs[r].push(t), t }, T = { heading: { match: u(/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n *)+\n/), parse: function (e, n, t) { return { level: e[1].length, content: g(n, e[2], t) } }, react: function (e, n, t) { return f({ ref: null, type: "h" + e.level, key: t.key, props: { children: n(e.content, t) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { return s("h" + e.level, n(e.content, t)) } }, nptable: { match: u(q.NPTABLE_REGEX), regex: q.NPTABLE_REGEX, parse: q.parseNpTable }, lheading: { match: u(/^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/), parse: function (e, n, t) { return { type: "heading", level: "=" === e[2] ? 1 : 2, content: g(n, e[1], t) } } }, hr: { match: u(/^( *[-*_]){3,} *(?:\n *)+\n/), parse: k, react: function (e, n, t) { return f({ ref: null, type: "hr", key: t.key, props: y, $$typeof: p, _store: null }) }, html: function (e, n, t) { return "<hr>" } }, codeBlock: { match: u(/^(?:    [^\n]+\n*)+(?:\n *)+\n/), parse: function (e, n, t) { return { lang: void 0, content: e[0].replace(/^    /gm, "").replace(/\n+$/, "") } }, react: function (e, n, t) { var r = e.lang ? "markdown-code-" + e.lang : void 0; return f({ ref: null, type: "pre", key: t.key, props: { children: f({ ref: null, type: "code", props: { className: r, children: e.content }, $$typeof: p, _store: null }) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { var r = e.lang ? "markdown-code-" + e.lang : void 0, l = s("code", e.content, { class: r }); return s("pre", l) } }, fence: { match: u(/^ *(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n *)+\n/), parse: function (e, n, t) { return { type: "codeBlock", lang: e[2] || void 0, content: e[3] } } }, blockQuote: { match: u(/^( *>[^\n]+(\n[^\n]+)*\n*)+\n{2,}/), parse: function (e, n, t) { return { content: n(e[0].replace(/^ *> ?/gm, ""), t) } }, react: function (e, n, t) { return f({ ref: null, type: "blockquote", key: t.key, props: { children: n(e.content, t) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { return s("blockquote", n(e.content, t)) } }, list: { match: function (e, n, t) { var r = O.test(t), l = n._list || !n.inline; return r && l ? A.exec(e) : null }, parse: function (e, n, t) { var r = e[2], l = r.length > 1, o = l ? +r : void 0, u = e[0].replace(S, "\n").match(w), a = !1; return { ordered: l, start: o, items: u.map(function (e, r) { var l = x.exec(e)[0].length, o = new RegExp("^ {1," + l + "}", "gm"), c = e.replace(o, "").replace(x, ""), i = r === u.length - 1, p = -1 !== c.indexOf("\n\n") || i && a; a = p; var f = t.inline, s = t._list; t._list = !0; var y; p ? (t.inline = !1, y = c.replace(R, "\n\n")) : (t.inline = !0, y = c.replace(R, "")); var d = n(y, t); return t.inline = f, t._list = s, d }) } }, react: function (e, n, t) { var r = e.ordered ? "ol" : "ul"; return f({ ref: null, type: r, key: t.key, props: { start: e.start, children: e.items.map(function (e, r) { return f({ ref: null, type: "li", key: r, props: { children: n(e, t) }, $$typeof: p, _store: null }) }) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { var r = e.items.map(function (e) { return s("li", n(e, t)) }).join(""), l = e.ordered ? "ol" : "ul", o = { start: e.start }; return s(l, r, o) } }, def: { match: u(/^ *\[([^\]]+)\]: *<?([^\s>]*)>?(?: +["(]([^\n]+)[")])? *\n(?: *\n)?/), parse: function (e, n, t) { var r = e[1].replace(/\s+/g, " ").toLowerCase(), l = e[2], o = e[3]; return t._refs && t._refs[r] && t._refs[r].forEach(function (e) { e.target = l, e.title = o }), t._defs = t._defs || {}, t._defs[r] = { target: l, title: o }, { def: r, target: l, title: o } }, react: function () { return null }, html: function () { return null } }, table: { match: u(/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/), parse: q.parseTable, react: function (e, n, t) { var r = function (n) { return null == e.align[n] ? {} : { textAlign: e.align[n] } }, l = e.header.map(function (e, l) { return f({ ref: null, type: "th", key: l, props: { style: r(l), scope: "col", children: n(e, t) }, $$typeof: p, _store: null }) }), o = e.cells.map(function (e, l) { return f({ ref: null, type: "tr", key: l, props: { children: e.map(function (e, l) { return f({ ref: null, type: "td", key: l, props: { style: r(l), children: n(e, t) }, $$typeof: p, _store: null }) }) }, $$typeof: p, _store: null }) }); return f({ ref: null, type: "table", key: t.key, props: { children: [f({ ref: null, type: "thead", key: "thead", props: { children: f({ ref: null, type: "tr", props: { children: l }, $$typeof: p, _store: null }) }, $$typeof: p, _store: null }), f({ ref: null, type: "tbody", key: "tbody", props: { children: o }, $$typeof: p, _store: null })] }, $$typeof: p, _store: null }) }, html: function (e, n, t) { var r = function (n) { return null == e.align[n] ? "" : "text-align:" + e.align[n] + ";" }, l = e.header.map(function (e, l) { return s("th", n(e, t), { style: r(l), scope: "col" }) }).join(""), o = e.cells.map(function (e) { var l = e.map(function (e, l) { return s("td", n(e, t), { style: r(l) }) }).join(""); return s("tr", l) }).join(""), u = s("thead", s("tr", l)), a = s("tbody", o); return s("table", u + a) } }, newline: { match: u(/^(?:\n *)*\n/), parse: k, react: function (e, n, t) { return "\n" }, html: function (e, n, t) { return "\n" } }, paragraph: { match: u(/^((?:[^\n]|\n(?! *\n))+)(?:\n *)+\n/), parse: $, react: function (e, n, t) { return f({ ref: null, type: "div", key: t.key, props: { className: "paragraph", children: n(e.content, t) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { var r = { class: "paragraph" }; return s("div", n(e.content, t), r) } }, escape: { match: o(/^\\([^0-9A-Za-z\s])/), parse: function (e, n, t) { return { type: "text", content: e[1] } } }, autolink: { match: o(/^<([^ >]+:\/[^ >]+)>/), parse: function (e, n, t) { return { type: "link", content: [{ type: "text", content: e[1] }], target: e[1] } } }, mailto: { match: o(/^<([^ >]+@[^ >]+)>/), parse: function (e, n, t) { var r = e[1], l = e[1]; return N.test(l) || (l = "mailto:" + l), { type: "link", content: [{ type: "text", content: r }], target: l } } }, url: { match: o(/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/), parse: function (e, n, t) { return { type: "link", content: [{ type: "text", content: e[1] }], target: e[1], title: void 0 } } }, link: { match: o(new RegExp("^\\[(" + P + ")\\]\\(" + j + "\\)")), parse: function (e, n, t) { return { content: n(e[1], t), target: m(e[2]), title: e[3] } }, react: function (e, n, t) { return f({ ref: null, type: "a", key: t.key, props: { href: d(e.target), title: e.title, children: n(e.content, t) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { var r = { href: d(e.target), title: e.title }; return s("a", n(e.content, t), r) } }, image: { match: o(new RegExp("^!\\[(" + P + ")\\]\\(" + j + "\\)")), parse: function (e, n, t) { return { alt: e[1], target: m(e[2]), title: e[3] } }, react: function (e, n, t) { return f({ ref: null, type: "img", key: t.key, props: { src: d(e.target), alt: e.alt, title: e.title }, $$typeof: p, _store: null }) }, html: function (e, n, t) { var r = { src: d(e.target), alt: e.alt, title: e.title }; return s("img", "", r, !1) } }, reflink: { match: o(new RegExp("^\\[(" + P + ")\\]\\s*\\[([^\\]]*)\\]")), parse: function (e, n, t) { return B(e, t, { type: "link", content: n(e[1], t) }) } }, refimage: { match: o(new RegExp("^!\\[(" + P + ")\\]\\s*\\[([^\\]]*)\\]")), parse: function (e, n, t) { return B(e, t, { type: "image", alt: e[1] }) } }, em: { match: o(new RegExp("^\\b_((?:__|\\\\[\\s\\S]|[^\\\\_])+?)_\\b|^\\*(?=\\S)((?:\\*\\*|\\s+(?:[^\\*\\s]|\\*\\*)|[^\\s\\*])+?)\\*(?!\\*)")), quality: function (e) { return e[0].length + .2 }, parse: function (e, n, t) { return { content: n(e[2] || e[1], t) } }, react: function (e, n, t) { return f({ ref: null, type: "em", key: t.key, props: { children: n(e.content, t) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { return s("em", n(e.content, t)) } }, strong: { match: o(/^\*\*([\s\S]+?)\*\*(?!\*)/), quality: function (e) { return e[0].length + .1 }, parse: $, react: function (e, n, t) { return f({ ref: null, type: "strong", key: t.key, props: { children: n(e.content, t) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { return s("strong", n(e.content, t)) } }, u: { match: o(/^__([\s\S]+?)__(?!_)/), quality: function (e) { return e[0].length }, parse: $, react: function (e, n, t) { return f({ ref: null, type: "u", key: t.key, props: { children: n(e.content, t) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { return s("u", n(e.content, t)) } }, del: { match: o(/^~~(?=\S)([\s\S]*?\S)~~/), parse: $, react: function (e, n, t) { return f({ ref: null, type: "del", key: t.key, props: { children: n(e.content, t) }, $$typeof: p, _store: null }) }, html: function (e, n, t) { return s("del", n(e.content, t)) } }, inlineCode: { match: o(/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/), parse: function (e, n, t) { return { content: e[2] } }, react: function (e, n, t) { return f({ ref: null, type: "code", key: t.key, props: { children: e.content }, $$typeof: p, _store: null }) }, html: function (e, n, t) { return s("code", e.content) } }, br: { match: a(/^ {2,}\n/), parse: k, react: function (e, n, t) { return f({ ref: null, type: "br", key: t.key, props: y, $$typeof: p, _store: null }) }, html: function (e, n, t) { return "<br>" } }, text: { match: o(/^[\s\S]+?(?=[^0-9A-Za-z\s\u00c0-\uffff]|\n\n| {2,}\n|\w+:\S|$)/), parse: function (e, n, t) { return { content: e[0] } }, react: function (e, n, t) { return e.content }, html: function (e, n, t) { return e.content } } }; Object.keys(T).forEach(function (e, n) { T[e].order = n }), T.strong.order = T.em.order = T.u.order; var L = function (e, n) { return n || "undefined" == typeof console || console.warn("simple-markdown ruleOutput should take 'react' or 'html' as the second argument."), n = n || "react", function (t, r, l) { return e[t.type][n](t, r, l) } }, z = l(T), C = function (e) { return z(e + "\n\n", { inline: !1 }) }, F = function (e) { return z(e, { inline: !0 }) }, I = function (e) { return z(e, { inline: !E.test(e) }) }, Z = c(L(T, "react")), G = i(L(T, "html")), U = { defaultRules: T, parserFor: l, ruleOutput: L, reactFor: c, htmlFor: i, inlineRegex: o, blockRegex: u, anyScopeRegex: a, parseInline: g, parseBlock: v, defaultRawParse: z, defaultBlockParse: C, defaultInlineParse: F, defaultImplicitParse: I, defaultReactOutput: Z, defaultHtmlOutput: G, preprocess: r, sanitizeUrl: d, unescapeUrl: m, defaultParse: I, outputFor: c, defaultOutput: Z }; "undefined" != typeof module && module.exports ? module.exports = U : "undefined" != typeof global ? global.SimpleMarkdown = U : window.SimpleMarkdown = U }();